/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import javax.swing.UIManager;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;

/**
 *
 * @author Fabio
 */
public class Menu extends javax.swing.JFrame implements InternalFrameListener{

    private boolean flagCadServidor = false;
    private boolean flagCadProduto = false;
    private boolean flagCadEquipamento = false;
    
    private boolean flagAltServidor = false;
    private boolean flagAltProduto = false;
    private boolean flagAltEquipamento = false;
    
    private boolean flagBusServidor = false;
    private boolean flagBusProduto = false;
    private boolean flagBusEquipamento = false;
    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jAreaTrabalho = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmCadastrar = new javax.swing.JMenu();
        jmiCadServidor = new javax.swing.JMenuItem();
        jmiCadProduto = new javax.swing.JMenuItem();
        jmiRegistrarProduto = new javax.swing.JMenuItem();
        jmiEquipamento = new javax.swing.JMenuItem();
        jmConsulta = new javax.swing.JMenu();
        jmiConsultaServidores = new javax.swing.JMenuItem();
        jmiConsultaProduto = new javax.swing.JMenuItem();
        jmiConsultaEquipamento = new javax.swing.JMenuItem();
        jmAlterar = new javax.swing.JMenu();
        jmiAlterarServidor = new javax.swing.JMenuItem();
        jmiAlterarProduto = new javax.swing.JMenuItem();
        jmiAlterarEquipamento = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jmSair = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Superintendência da Tecnologia da Informação");

        jAreaTrabalho.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jAreaTrabalho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/sti1.jpg"))); // NOI18N
        jAreaTrabalho.setToolTipText("");

        jmCadastrar.setText("Cadastrar");

        jmiCadServidor.setText("Servidor");
        jmiCadServidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadServidorActionPerformed(evt);
            }
        });
        jmCadastrar.add(jmiCadServidor);

        jmiCadProduto.setText("Produto");
        jmiCadProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadProdutoActionPerformed(evt);
            }
        });
        jmCadastrar.add(jmiCadProduto);

        jmiRegistrarProduto.setText("Registrar Troca do Produto");
        jmiRegistrarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRegistrarProdutoActionPerformed(evt);
            }
        });
        jmCadastrar.add(jmiRegistrarProduto);

        jmiEquipamento.setText("Equipamento");
        jmiEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiEquipamentoActionPerformed(evt);
            }
        });
        jmCadastrar.add(jmiEquipamento);

        jMenuBar1.add(jmCadastrar);

        jmConsulta.setText("Consulta");

        jmiConsultaServidores.setText("Servidores");
        jmiConsultaServidores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiConsultaServidoresActionPerformed(evt);
            }
        });
        jmConsulta.add(jmiConsultaServidores);

        jmiConsultaProduto.setText("Produto");
        jmiConsultaProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiConsultaProdutoActionPerformed(evt);
            }
        });
        jmConsulta.add(jmiConsultaProduto);

        jmiConsultaEquipamento.setText("Equipamento");
        jmiConsultaEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiConsultaEquipamentoActionPerformed(evt);
            }
        });
        jmConsulta.add(jmiConsultaEquipamento);

        jMenuBar1.add(jmConsulta);

        jmAlterar.setText("Alterar");

        jmiAlterarServidor.setText("Servidor");
        jmiAlterarServidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAlterarServidorActionPerformed(evt);
            }
        });
        jmAlterar.add(jmiAlterarServidor);

        jmiAlterarProduto.setText("Produto");
        jmiAlterarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAlterarProdutoActionPerformed(evt);
            }
        });
        jmAlterar.add(jmiAlterarProduto);

        jmiAlterarEquipamento.setText("Equipamento");
        jmiAlterarEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAlterarEquipamentoActionPerformed(evt);
            }
        });
        jmAlterar.add(jmiAlterarEquipamento);

        jMenuBar1.add(jmAlterar);

        jMenu1.setText("Logout");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jmSair.setText("Sair");
        jmSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmSairMouseClicked(evt);
            }
        });
        jMenuBar1.add(jmSair);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jAreaTrabalho)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jAreaTrabalho, javax.swing.GroupLayout.PREFERRED_SIZE, 1191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //     telas do servidor    
    private void abrirCadServidor(){
        if (!flagCadServidor) {
            UiCadServidor ucs = new UiCadServidor();
            jAreaTrabalho.add(ucs);
            ucs.setVisible(true);
            flagCadServidor = true;
            ucs.addInternalFrameListener(this);
        }        
    }  
    private void abrirBuscaServidor(){
        if(!flagBusServidor){
            UiBuscaServidor ubs = new UiBuscaServidor();
            jAreaTrabalho.add(ubs);
            ubs.setVisible(true);
            flagBusServidor = true;
            ubs.addInternalFrameListener(this);
        }
    }    
    private void abrirAltererServidor(){
        if(!flagAltServidor){
            UiAlterarServidor uas = new UiAlterarServidor();
            jAreaTrabalho.add(uas);
            uas.setVisible(true);
            flagAltServidor = true;
            uas.addInternalFrameListener(this);
        }
    }    
    //     telas do produto
    private void abrirCadProduto(){
        if (!flagCadProduto) {
            UiCadProduto ucp = new UiCadProduto();
            jAreaTrabalho.add(ucp);
            ucp.setVisible(true); 
            flagCadProduto = true;
            ucp.addInternalFrameListener(this);
        }
    }
    private void abrirBuscaProduto(){
        if(!flagBusProduto){
            UiBuscaProduto ubp = new UiBuscaProduto();
            jAreaTrabalho.add(ubp);
            ubp.setVisible(true);
            flagBusProduto = true;
            ubp.addInternalFrameListener(this);
        }
    }    
    private void abrirAlterarProduto(){
        if(!flagAltProduto){
            UiAlterarProduto uap = new UiAlterarProduto();
            jAreaTrabalho.add(uap);
            uap.setVisible(true);
            flagAltProduto = true;
            uap.addInternalFrameListener(this);
        }
    }
    //     tela de servidor produto
    private void abrirCadServidorProduto(){
        UiCadServidorProduto ucsp = new UiCadServidorProduto();
        jAreaTrabalho.add(ucsp);
        ucsp.setVisible(true);
    }
    //     telas do equipamento
    private void abrirCadEquipamento(){
        if (!flagCadEquipamento) {
            UiCadEquipamento uce = new UiCadEquipamento();
            jAreaTrabalho.add(uce);
            uce.setVisible(true);
            flagCadEquipamento = true;
            uce.addInternalFrameListener(this);
        }
            
    }
    private void abrirBuscaEquibamento(){
        if(!flagBusEquipamento){
            UiBuscaEquipamento ube = new UiBuscaEquipamento();
            jAreaTrabalho.add(ube);
            ube.setVisible(true);
            flagBusEquipamento = true;
            ube.addInternalFrameListener(this);
        }
    }
    private void abrirAlterarEquipamento(){
        if(!flagAltEquipamento){
            UiAlterarEquipamento uae = new UiAlterarEquipamento();
            jAreaTrabalho.add(uae);
            uae.setVisible(true);
            flagAltEquipamento = true;
            uae.addInternalFrameListener(this);
        }
    }
    //     tela de login  
    private void abrirUiLogin(){
        UiLog gl = new UiLog();
        gl.setVisible(true);
        this.setVisible(false);
    }
    
    private void jmiCadServidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadServidorActionPerformed
       abrirCadServidor();
    }//GEN-LAST:event_jmiCadServidorActionPerformed

    private void jmiConsultaServidoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiConsultaServidoresActionPerformed
       abrirBuscaServidor();
    }//GEN-LAST:event_jmiConsultaServidoresActionPerformed

    private void jmSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmSairMouseClicked
       System.exit(EXIT_ON_CLOSE);
    }//GEN-LAST:event_jmSairMouseClicked

    private void jmiAlterarServidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAlterarServidorActionPerformed
       abrirAltererServidor();
    }//GEN-LAST:event_jmiAlterarServidorActionPerformed

    private void jmiCadProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadProdutoActionPerformed
       abrirCadProduto();
    }//GEN-LAST:event_jmiCadProdutoActionPerformed

    private void jmiConsultaProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiConsultaProdutoActionPerformed
        abrirBuscaProduto();
    }//GEN-LAST:event_jmiConsultaProdutoActionPerformed

    private void jmiAlterarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAlterarProdutoActionPerformed
       abrirAlterarProduto();
    }//GEN-LAST:event_jmiAlterarProdutoActionPerformed

    private void jmiRegistrarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRegistrarProdutoActionPerformed
       abrirCadServidorProduto();
    }//GEN-LAST:event_jmiRegistrarProdutoActionPerformed

    private void jmiEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiEquipamentoActionPerformed
        abrirCadEquipamento();
    }//GEN-LAST:event_jmiEquipamentoActionPerformed

    private void jmiConsultaEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiConsultaEquipamentoActionPerformed
      abrirBuscaEquibamento();
    }//GEN-LAST:event_jmiConsultaEquipamentoActionPerformed

    private void jmiAlterarEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAlterarEquipamentoActionPerformed
       abrirAlterarEquipamento();
    }//GEN-LAST:event_jmiAlterarEquipamentoActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        abrirUiLogin();
    }//GEN-LAST:event_jMenu1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            /*for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }*/
            com.jtattoo.plaf.acryl.AcrylLookAndFeel.setTheme("black", "INSERT YOUR LICENSE KEY HERE", "my company");
            UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
            
            
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jAreaTrabalho;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jmAlterar;
    private javax.swing.JMenu jmCadastrar;
    private javax.swing.JMenu jmConsulta;
    private javax.swing.JMenu jmSair;
    private javax.swing.JMenuItem jmiAlterarEquipamento;
    private javax.swing.JMenuItem jmiAlterarProduto;
    private javax.swing.JMenuItem jmiAlterarServidor;
    private javax.swing.JMenuItem jmiCadProduto;
    private javax.swing.JMenuItem jmiCadServidor;
    private javax.swing.JMenuItem jmiConsultaEquipamento;
    private javax.swing.JMenuItem jmiConsultaProduto;
    private javax.swing.JMenuItem jmiConsultaServidores;
    private javax.swing.JMenuItem jmiEquipamento;
    private javax.swing.JMenuItem jmiRegistrarProduto;
    // End of variables declaration//GEN-END:variables

    @Override
    public void internalFrameOpened(InternalFrameEvent e) {
        
    }

    @Override
    public void internalFrameClosing(InternalFrameEvent e) {
        
    }

    @Override
    public void internalFrameClosed(InternalFrameEvent e) {
        if(e.getInternalFrame() instanceof UiCadServidor){
            flagCadServidor = false;
        } else if(e.getInternalFrame() instanceof UiCadProduto){
            flagCadServidor = false;
        } else if(e.getInternalFrame() instanceof UiCadEquipamento){
            flagCadServidor = false;
        } 
        if(e.getInternalFrame() instanceof UiCadProduto){
            flagCadProduto = false;
        } else if(e.getInternalFrame() instanceof UiCadEquipamento){
            flagCadProduto = false;
        } else if(e.getInternalFrame() instanceof UiCadServidor){
            flagCadProduto = false;
        }
        if(e.getInternalFrame() instanceof UiCadEquipamento){
            flagCadEquipamento = false;
        } else if(e.getInternalFrame() instanceof UiCadServidor){
            flagCadEquipamento = false;
        } else if(e.getInternalFrame() instanceof UiCadProduto){
            flagCadEquipamento = false;
        } 
        
        if(e.getInternalFrame() instanceof UiBuscaServidor){
            flagBusServidor = false;
        } else if(e.getInternalFrame() instanceof UiBuscaProduto){
            flagBusServidor = false;
        } else if(e.getInternalFrame() instanceof UiBuscaEquipamento){
            flagBusServidor = false;
        } 
        if(e.getInternalFrame() instanceof UiBuscaProduto){
            flagBusProduto = false;
        } else if(e.getInternalFrame() instanceof UiBuscaEquipamento){
            flagBusProduto = false;
        } else if(e.getInternalFrame() instanceof UiBuscaServidor){
            flagBusProduto = false;
        }
        if(e.getInternalFrame() instanceof UiBuscaEquipamento){
            flagBusEquipamento = false;
        } else if(e.getInternalFrame() instanceof UiBuscaServidor){
            flagBusEquipamento = false;
        } else if(e.getInternalFrame() instanceof UiBuscaProduto){
            flagBusEquipamento = false;
        }
        if(e.getInternalFrame() instanceof UiAlterarEquipamento){
            flagAltEquipamento = false;
        } else if(e.getInternalFrame() instanceof UiAlterarServidor){
            flagAltEquipamento = false;
        } else if(e.getInternalFrame() instanceof UiAlterarProduto){
            flagAltEquipamento = false;
        }
        
        if(e.getInternalFrame() instanceof UiAlterarServidor){
            flagAltServidor = false;
        } else if(e.getInternalFrame() instanceof UiAlterarProduto){
            flagAltServidor = false;
        } else if(e.getInternalFrame() instanceof UiAlterarEquipamento){
            flagAltServidor = false;
        } 
        if(e.getInternalFrame() instanceof UiAlterarProduto){
            flagAltProduto = false;
        } else if(e.getInternalFrame() instanceof UiAlterarEquipamento){
            flagAltProduto = false;
        } else if(e.getInternalFrame() instanceof UiAlterarServidor){
            flagAltProduto = false;
        }
    }

    @Override
    public void internalFrameIconified(InternalFrameEvent e) {
        
    }

    @Override
    public void internalFrameDeiconified(InternalFrameEvent e) {
        
    }

    @Override
    public void internalFrameActivated(InternalFrameEvent e) {
        
    }

    @Override
    public void internalFrameDeactivated(InternalFrameEvent e) {
        
    }
}
